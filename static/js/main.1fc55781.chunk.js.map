{"version":3,"sources":["components/Layout/Layout.styled.jsx","components/Layout/Layout.jsx","api/index.js","components/Loader/index.js","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Form/FormContainer.jsx","actions/index.js","utils/index.js","App.js","reducers/index.js","serviceWorker.js","index.js"],"names":["StyledLayout","styled","div","_templateObject","Layout","_ref","children","react_default","a","createElement","loadData","Object","asyncToGenerator","regenerator_default","mark","_callee","value","_ref2","result","wrap","_context","prev","next","axios","get","concat","sent","data","abrupt","map","item","id","url","images","downsized","t0","console","log","stop","_x","apply","this","arguments","Loader","className","Styled","Bar","Form_styled_templateObject","Input","input","_templateObject2","Title","h1","_templateObject3","ResultContainer","_templateObject4","Image","img","_templateObject5","Button","button","_templateObject6","Form","image","error","loadingState","onSubmit","searchValue","setSearchValue","Loader_Loader","buttonText","Boolean","length","src","alt","type","onChange","e","target","ConnectedForm","connect","state","objectSpread","setImages","dispatch","payload","setCurrentImage","setError","_useState","useState","_useState2","slicedToArray","setLoadingState","_useState3","_useState4","useEffect","document","title","loadContent","min","max","Math","floor","random","formProps","preventDefault","Form_Form","App","Layout_Layout","initialState","reducer","undefined","action","window","location","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1fc55781.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLayout = styled.div`\n  width: 100%;\n  background-color: #282c34;\n  min-height: 100vh;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n","import React from 'react';\nimport { StyledLayout } from './Layout.styled';\n\nexport const Layout = ({ children }) => <StyledLayout>{children}</StyledLayout>;\n","import axios from 'axios';\n\nexport const loadData = async value => {\n  try {\n    const apiKey = 'SccsoCNcduBUF6EiYr9iHKfb90UuRRbQ&limit=150';\n\n    const {\n      data: { data: result },\n    } = await axios.get(\n      `https://api.giphy.com/v1/gifs/search?q=${value}&api_key=${apiKey}`,\n    );\n\n    return result.map(item => ({\n      id: item.id,\n      url: item.images.downsized.url,\n    }));\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import React from 'react';\n\nexport const Loader = () => (\n  <div className=\"lds-css ng-scope\">\n    <div className=\"lds-ellipsis\">\n      <div>\n        <div/>\n      </div>\n      <div>\n        <div/>\n      </div>\n      <div>\n        <div/>\n      </div>\n      <div>\n        <div/>\n      </div>\n      <div>\n        <div/>\n      </div>\n    </div>\n  </div>\n);","import styled from 'styled-components';\n\nexport const Styled = {\n  Bar: styled.div`\n    max-width: 320px;\n    padding: 0 20px;\n    margin: 25px auto 0;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n  `,\n  Input: styled.input`\n    padding: 0 20px;\n    height: 40px;\n    flex-grow: 1;\n    font-size: 14px;\n    outline: none;\n    border-radius: 5px 0 0 5px;\n    border: 0;\n  `,\n  Title: styled.h1`\n    padding: 0 20px;\n  `,\n  ResultContainer: styled.div`\n    padding: 0 20px;\n    max-width: 100%;\n  `,\n  Image: styled.img`\n    width: 100%;\n  `,\n  Button: styled.button`\n    padding: 3px 15px 5px;\n    height: 40px;\n    font-size: 14px;\n    background-color: #113f9b;\n    color: #fff;\n    outline: none;\n    flex-shrink: 0;\n    border-radius: 0 5px 5px 0;\n    border: 0;\n  `,\n};\n","import React from 'react';\n\nimport { Loader } from '../Loader';\nimport { Styled } from './Form.styled';\n\nexport const Form = ({\n  data,\n  image,\n  error,\n  loadingState,\n  onSubmit,\n  searchValue,\n  setSearchValue,\n}) => {\n  if (loadingState) {\n    return <Loader />;\n  }\n\n  const buttonText = Boolean(data.length) ? 'Ещё!' : 'Найти!';\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Styled.Title>Find you GIF!</Styled.Title>\n      {Boolean(data.length) && (\n        <Styled.ResultContainer>\n          <Styled.Image src={image} alt=\"\" />\n        </Styled.ResultContainer>\n      )}\n      <Styled.Bar>\n        <Styled.Input\n          type=\"text\"\n          onChange={e => setSearchValue(e.target.value)}\n          value={searchValue}\n        />\n        <Styled.Button type=\"submit\">{buttonText}</Styled.Button>\n      </Styled.Bar>\n      {error && <p className=\"error\">{error}</p>}\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setCurrentImage, setError, setImages } from '../../actions';\nimport { loadData } from '../../api';\nimport { getRandomNumber } from '../../utils';\nimport { Form } from './Form';\n\nconst FormContainer = ({\n  data,\n  image,\n  error,\n  setImages,\n  setCurrentImage,\n  setError,\n}) => {\n  const [loadingState, setLoadingState] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n\n  useEffect(() => {\n    document.title = 'GIF-Search';\n  }, []);\n\n  const loadContent = async value => {\n    try {\n      setLoadingState(true);\n\n      const result = await loadData(value);\n\n      setImages(result);\n\n      setCurrentImage(result[getRandomNumber(0, result.length)].url);\n\n      setLoadingState(false);\n    } catch {\n      setError('Упс! Проблема с запросом, попробуй другое слово :(');\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    return loadContent(searchValue);\n  };\n\n  const formProps = {\n    data,\n    image,\n    error,\n    searchValue,\n    setSearchValue,\n    loadingState,\n    onSubmit,\n  };\n\n  return <Form {...formProps} />;\n};\n\nconst ConnectedForm = connect(\n  state => ({\n    ...state,\n  }),\n  {\n    setImages,\n    setCurrentImage,\n    setError,\n  },\n)(FormContainer);\n\nexport { ConnectedForm as FormContainer };\n","export const CHANGE_LINKS = 'CHANGE_LINKS';\nexport const CHANGE_IMAGE = 'CHANGE_IMAGE';\nexport const CHANGE_ERROR = 'CHANGE_ERROR';\n\nexport const setImages = images => dispatch =>\n  dispatch({ type: CHANGE_LINKS, payload: images });\n\nexport const setCurrentImage = image => dispatch =>\n  dispatch({ type: CHANGE_IMAGE, payload: image });\n\nexport const setError = value => dispatch =>\n  dispatch({ type: CHANGE_ERROR, payload: value });\n","export const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min)) + min;","import React from 'react';\nimport './App.css';\n\n// Components\nimport { Layout } from './components/Layout';\nimport { FormContainer } from './components/Form/FormContainer';\n\nconst App = () => (\n  <div className=\"App\">\n    <Layout>\n      <FormContainer />\n    </Layout>\n  </div>\n);\n\nexport default App;\n","import { CHANGE_ERROR, CHANGE_IMAGE, CHANGE_LINKS } from '../actions';\n\nconst initialState = {\n  data: [],\n  image: null,\n  error: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CHANGE_LINKS:\n      return { ...state, data: payload };\n    case CHANGE_ERROR:\n      return { ...state, error: payload };\n    case CHANGE_IMAGE:\n      return { ...state, image: payload };\n    default:\n      return { ...state };\n  }\n};\n\nexport default reducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport './index.css';\nimport reducer from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}